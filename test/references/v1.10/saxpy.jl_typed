CodeInfo(                                                  ┃ CodeInfo(                                                 
1 ── %1  = Base.arraysize(r, 1)::Int64                     ┃ 1 ── %1  = Base.arraysize(r, 1)::Int64                    
│    %2  = Base.slt_int(%1, 0)::Bool                       ┃ │    %2  = Base.slt_int(%1, 0)::Bool                      
│    %3  = Core.ifelse(%2, 0, %1)::Int64                   ┃ │    %3  = Core.ifelse(%2, 0, %1)::Int64                  
│    %4  = Base.slt_int(%3, 1)::Bool                      ⟪┫                                                           
└───       goto #3 if not %4                              ⟪╋⟫└───       goto #13 if not true                           
2 ──       goto #4                                        ⟪┫                                                           
3 ──       goto #4                                        ⟪┫                                                           
4 ┄─ %8  = φ (#2 => true, #3 => false)::Bool              ⟪┫                                                           
│    %9  = φ (#3 => 1)::Int64                             ⟪┫                                                           
│    %10 = φ (#3 => 1)::Int64                             ⟪┫                                                           
│    %11 = Base.not_int(%8)::Bool                         ⟪┫                                                           
└───       goto #10 if not %11                            ⟪╋⟫└───       goto #12 if not %6                             
5 ┄─ %13 = φ (#4 => %9, #9 => %25)::Int64                 ⟪╋⟫4 ┄─ %9  = φ (#3 => 0, #11 => %28)::Int64                 
│    %14 = φ (#4 => %10, #9 => %26)::Int64                ⟪┫                                                           
│    %15 = Base.arrayref(true, x, %13)::Int64             ⟪┫                                                           
│    %16 = Base.mul_int(a, %15)::Int64                    ⟪┫                                                           
│    %17 = Base.arrayref(true, y, %13)::Int64             ⟪┫                                                           
│    %18 = Base.add_int(%16, %17)::Int64                  ⟪┫                                                           
│          Base.arrayset(true, r, %18, %13)::Vector{Int64…⟪┫                                                           
│    %20 = (%14 === %3)::Bool                             ⟪┫                                                           
└───       goto #7 if not %20                             ⟪┫                                                           
6 ──       goto #8                                        ⟪┫                                                           
7 ── %23 = Base.add_int(%14, 1)::Int64                    ⟪┫                                                           
└───       goto #8                                        ⟪┫                                                           
8 ┄─ %25 = φ (#7 => %23)::Int64                           ⟪┫                                                           
│    %26 = φ (#7 => %23)::Int64                           ⟪┫                                                           
│    %27 = φ (#6 => true, #7 => false)::Bool              ⟪┫                                                           
│    %28 = Base.not_int(%27)::Bool                        ⟪╋⟫│    %10 = Base.slt_int(%9, %3)::Bool                     
└───       goto #10 if not %28                            ⟪╋⟫└───       goto #12 if not %10                            
9 ──       goto #5                                        ⟪╋⟫7 ──       goto #9                                        
10 ┄       return nothing                                 ⟪╋⟫13 ┄       return Main.nothing                            
                                                           ┣⟫│    %4  = %new(Base.OneTo{Int64}, %3)::Base.OneTo{Int64} 
                                                           ┣⟫2 ── %6  = Base.slt_int(0, %3)::Bool                      
                                                           ┣⟫3 ──       nothing::Nothing                               
                                                           ┣⟫5 ── %12 = Base.add_int(%9, 1)::Int64                     
                                                           ┣⟫└───       goto #9 if not false                           
                                                           ┣⟫6 ── %14 = Base.slt_int(0, %12)::Bool                     
                                                           ┣⟫│    %15 = Base.sle_int(%12, %3)::Bool                    
                                                           ┣⟫│    %16 = Base.and_int(%14, %15)::Bool                   
                                                           ┣⟫└───       goto #8 if not %16                             
                                                           ┣⟫8 ──       invoke Base.throw_boundserror(%4::Base.OneTo{I…
                                                           ┣⟫└───       unreachable                                    
                                                           ┣⟫9 ┄─       goto #10                                       
                                                           ┣⟫10 ─       goto #11                                       
                                                           ┣⟫11 ─ %23 = Base.arrayref(false, x, %12)::Int64            
                                                           ┣⟫│    %24 = Base.mul_int(a, %23)::Int64                    
                                                           ┣⟫│    %25 = Base.arrayref(false, y, %12)::Int64            
                                                           ┣⟫│    %26 = Base.add_int(%24, %25)::Int64                  
                                                           ┣⟫│          Base.arrayset(false, r, %26, %12)::Vector{Int6…
                                                           ┣⟫│    %28 = Base.add_int(%9, 1)::Int64                     
                                                           ┣⟫│          $(Expr(:loopinfo, Symbol("julia.simdloop"), Sy…
                                                           ┣⟫└───       goto #4                                        
                                                           ┣⟫12 ┄       nothing::Nothing                               
) => Nothing                                               ┃ ) => Nothing                                              